[build-system][build-system]

requires = ["setuptools>=61.0", "wheel"]requires = ["setuptools>=42", "wheel"]

build-backend = "setuptools.build_meta"build-backend = "setuptools.build_meta"



[project][project]

name = "markdown2notion"name = "markdown2notion"

version = "0.1.0"version = "0.1.0"

description = "MCP server for uploading Markdown files to Notion"description = "Markdown to Notion MCP Server - FastMCPを使用したMarkdownファイルをNotionにアップロードするMCPサーバー"

authors = [authors = [

    {name = "Kento Okubo", email = "kento.okubo@example.com"}    {name = "Markdown2Notion Team"}

]]

readme = "README.md"readme = "README.md"

requires-python = ">=3.8"requires-python = ">=3.10"

license = {text = "MIT"}classifiers = [

keywords = ["notion", "markdown", "mcp", "model-context-protocol", "fastmcp"]    "Programming Language :: Python :: 3",

classifiers = [    "Programming Language :: Python :: 3.10",

    "Development Status :: 4 - Beta",    "Operating System :: OS Independent",

    "Intended Audience :: Developers",    "License :: OSI Approved :: MIT License",

    "License :: OSI Approved :: MIT License",    "Topic :: Text Processing :: Markup :: Markdown",

    "Programming Language :: Python :: 3",    "Topic :: Office/Business :: Office Suites",

    "Programming Language :: Python :: 3.8",]

    "Programming Language :: Python :: 3.9",dependencies = [

    "Programming Language :: Python :: 3.10",    "mcp",

    "Programming Language :: Python :: 3.11",    "fastmcp",

    "Programming Language :: Python :: 3.12",    "notion-client>=2.0.0",

    "Topic :: Office/Business",    "mistune>=3.0.0",

    "Topic :: Text Processing :: Markup :: Markdown",    "python-dotenv",

    "Topic :: Software Development :: Libraries :: Python Modules",]

]

dependencies = [[project.optional-dependencies]

    "fastmcp>=2.13.0",dev = [

    "notion-client>=2.6.0",    "pytest",

    "python-dotenv>=1.1.1",    "black",

    "mistune>=3.1.4"    "flake8",

]]



[project.optional-dependencies][project.scripts]

dev = [markdown2notion = "src.server:main"

    "pytest>=7.0.0",

    "pytest-cov>=4.0.0",[tool.setuptools]

    "black>=23.0.0",package-dir = {"" = "."}

    "ruff>=0.1.0",

    "mypy>=1.0.0",[tool.setuptools.packages.find]

    "pre-commit>=3.0.0"where = ["."]

]include = ["src*"]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0"
]

[project.urls]
Homepage = "https://github.com/kentookubo/markdown2notion"
Repository = "https://github.com/kentookubo/markdown2notion"
Issues = "https://github.com/kentookubo/markdown2notion/issues"
Documentation = "https://github.com/kentookubo/markdown2notion/tree/main/docs"

[project.scripts]
markdown2notion = "src.server:main"

# Ruff configuration
[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"tests/*" = ["E501", "F401", "F811"]

[tool.ruff.isort]
known-first-party = ["src"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

[[tool.mypy.overrides]]
module = [
    "fastmcp.*",
    "notion_client.*",
    "mistune.*"
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

# Coverage configuration
[tool.coverage.run]
source = ["src"]
omit = [
    "tests/*",
    "src/__pycache__/*",
    ".venv/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]